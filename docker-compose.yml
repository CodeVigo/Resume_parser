version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: campus-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: campusRecruitment
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - campus-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: campus-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - campus-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: campus-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGO_URI=mongodb://admin:admin123@mongodb:27017/campusRecruitment?authSource=admin
      - REDIS_URL=redis://redis:6379
      - CLIENT_URL=http://localhost:3000
  -GOOGLE_CLIENT_ID=YOUR_CLIENT_ID
-GOOGLE_CLIENT_SECRET=YOUR_CLIENT_SECRET

      - GOOGLE_CALLBACK_URL=http://localhost:5000/api/auth/google/callback
      - JWT_SECRET=your_super_secret_jwt_key_for_campus_recruitment_2024
      - ACCESS_TOKEN_EXPIRY=2h
      - REFRESH_TOKEN_EXPIRY=7d
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - campus-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: campus-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - campus-network

volumes:
  mongodb_data:
  redis_data:

networks:
  campus-network:
    driver: bridge